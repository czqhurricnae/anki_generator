所有发出事件的对象都是 EventEmitter  的实例,正确***错误,A,
当 EventEmitter 对象发出事件时，事件上绑定的函数都会被同步执行。这些函数的返回值都会被无视并丢弃掉。,正确***错误,A,
Event 发射事件的方法是,myEmitter.emit***myEmitter.on,A,
Event  监听事件的方法是,myEmitter.emit***myEmitter.on,B,
Event on 绑定的监听函数中，如果监听函数是普通 function ，this 是哪个对象,EventEmitter  实例***global***空对象,A,
Event on 绑定的监听函数中，如果监听函数是箭头 function ，this 是哪个对象,EventEmitter  实例***global***空对象,C,
EventEmitter  默认都是根据绑定顺序，来同步执行监听函数。,正确***错误,A,
Event 的监听函数可以使用 setImmediate 或 process.nextick 来变成异步执行的,正确***错误,A,
Event 如果只需要监听一次事件，使用什么方法,event.on()***event.once(),B,
当 EventEmitter  对 error 事件没有注册监听方法时，如果 event 实例发生了 error 事件会怎么样,打印 error stack***啥也不发生***退出 node 进程,AC,
作为最佳实践，event 必须总是给 error 事件添加监听函数,正确,A,
EventEmitter class 是 events 模块默认抛出的对象,正确,A,
添加 Listener 时，EventEmitter 发出什么事件,newListener***removeListener,A,
移除 Listener 时，EventEmitter 发出什么事件,newListener***removeListener,B,
newListener 事件，传递的是什么参数,事件名 eventName***listener 的引用,AB,
newListener  事件的触发时机,添加事件之前***添加事件之后,A,
如果添加监听 event 事件1时，触发了 newListener  事件，在 newListener 的回调中添加同名事件的监听事件2，会优先执行哪个事件,2 => 1***1 => 2,A,
Event 中同一事件默认最多的监听事件数是（通过 EventEmitter.defaultMaxListeners 获取）,8***10***50,B,
EventEmitter  实例可以通过 getMaxListeners() 获取当前实例的最大监听数。EventEmitter.defaultMaxListeners 可以直接修改，修改后会作用到所有的实例，包括已创建的,正确,A,
EventEmitter  实例可以通过 setMaxListeners(n) 来修改当前实例的最大监听数,正确,A,
"emitter.addListener(eventName, listener) alias emitter.on，添加监听器",正确,A,
"emitter.emit(eventName[, …args]) 发射事件，按照注册顺序，同步调用每一个监听器，将提供的参数传递给每一个监听器",正确,A,
emitter.eventNames() 返回一个数组，包含这个 emitter 中监听的所有事件名,正确,A,
emitter.listenerCount(eventName) 获取对应事件的监听数,正确,A,
emitter.listeners(eventName) 返回监听器的数组,正确,A,
"emitter.off(eventName, listener) alias emitter.removeListener()",正确,A,
"emitter.on(eventName, listener) 在事件监听器数组的尾部添加监听器，返回一个 emitter ，可用于链式调用",正确,A,
"emitter.prependListener(eventName, listener) 在事件监听器数组的头部添加监听器",正确,A,
emitter.removeAllListeners([eventName]) 移除所有的监听器或者指定事件的监听器,正确,A,
"emitter.removeListener(eventName, listener) 移除指定的监听器，可以通过 listeners() 获取所有的监听器。removeListener 只能移除一个监听器一次，如果监听器重复监听，则需要移除多次。",正确,A,
当事件触发时，执行 removeListener，并不会影响正在运行的 emit()，之后的事件触发按照预期执行,正确,A,
removeListener 对多次监听的监听器，会移除最近一次插入的监听器,正确,A,
emitter.rawListener(eventName) 返回 listeners 的数组拷贝,正确,A,
"events.once(emitter, name) 是 events.once 的方法，对某个指定的 emitter 的事件进行监听，并且返回一个 promise",正确,A,